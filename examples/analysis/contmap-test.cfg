# ====================================================================
# Contact Map analysis example
# 
# in this example, the following workflow is defined:
# - First a rigid body docking is performed (`topoaa` + `rigidbody`)
# - Followed by a fcc clustering of the models (`clustfcc`)
# - Finally, the `contactmap` module is employed to analyse contacts
#    and generate graphs.
# ====================================================================
# ================= #
# Global parameters #
# ================= #
# directory in which the analysis will be performed
run_dir = "test_contmap"
# Number of CPU cores to use
ncores = 5
mode = "local"
# Input molecules
molecules = ["../data/1a2k_r_u.pdb", "../data/1a2k_l_u.pdb"]
# Disable post-processing
postprocess = true

# =================== #
# Workflow definition #
# =================== #
# Sanitarize input pdb files prior to rigid-body module
[topoaa]
# Perform rigid-body docking generating only 20 complexes
[rigidbody]
sampling = 20
ambig_fname = "../data/1a2k_ti.tbl"

# Cluster complexes using fraction of common contacts
[clustfcc]
min_population = 2

# Use the contactmap module to generate graphical representation
#  of contacts for each cluster
# Note: the default parameters are here for your knowledge
[contactmap]
# Sets the distance threshold to define a contact between Ca-Ca
ca_ca_dist_threshold = 9.0
# Sets the distance threshold to define a contact between any atoms from 2 resi
shortest_dist_threshold = 4.5
# true to generate plotly heatmap html file(s)
generate_heatmap = true
# Data type to be used in the heatmap
cluster_heatmap_datatype = "shortest-cont-probability"  # In this case: probability to find the shortest distance between two residues under the 4.5 in each cluster
# Set the color ramp of the heatmap
color_ramp = "Greys"
# true to generate plotly chord chart html file(s)
generate_chordchart = true
# Data type to be used in chord chart
chordchart_datatype = "shortest-dist"
# do not perform single model analyses:
#  do not keep single model tsv nor generate html heatmaps
single_model_analysis = false
# for unclustered models, only analyse the top 10 models
topX = 10
